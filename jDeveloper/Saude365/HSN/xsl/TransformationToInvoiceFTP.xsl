<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../UploadFTPAdapter.wsdl"/>
      <rootElement name="message" namespace="urn:netdocs:schemas:message"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="../UploadFTPAdapter.wsdl"/>
      <rootElement name="message" namespace="urn:netdocs:schemas:message"/>
    </target>
  </mapTargets>
  <substitutions>
      <sourceSubst substPath="/imp1:message/imp1:genericDocument" substElem="ns1:invoice"/>
  </substitutions>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.6.0(build 111214.0600.1553) AT [MON APR 29 11:42:07 WEST 2013]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:imp1="urn:netdocs:schemas:message"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/ftp/Saude365/HSN/UploadFTPAdapter"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns1="urn:netdocs:schemas:document"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:bpmn="http://schemas.oracle.com/bpm/xpath"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl imp1 plt wsdl tns jca ns1 xsd xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap">
  <xsl:template match="/">
    <imp1:message>
      <xsl:attribute name="id">
        <xsl:value-of select="/imp1:message/@id"/>
      </xsl:attribute>
      <xsl:attribute name="creationDateTime">
        <xsl:value-of select="/imp1:message/@creationDateTime"/>
      </xsl:attribute>
      <sender>
        <xsl:for-each select="/imp1:message/sender/id">
          <id>
            <xsl:attribute name="entityIdTypeCoded">
              <xsl:value-of select="@entityIdTypeCoded"/>
            </xsl:attribute>
            <xsl:value-of select="."/>
          </id>
        </xsl:for-each>
        <xsl:if test="/imp1:message/sender/name">
          <name>
            <xsl:value-of select="/imp1:message/sender/name"/>
          </name>
        </xsl:if>
        <xsl:if test="/imp1:message/sender/addressInformation">
          <addressInformation>
            <xsl:if test="/imp1:message/sender/addressInformation/address">
              <address>
                <xsl:value-of select="/imp1:message/sender/addressInformation/address"/>
              </address>
            </xsl:if>
            <xsl:if test="/imp1:message/sender/addressInformation/city">
              <city>
                <xsl:value-of select="/imp1:message/sender/addressInformation/city"/>
              </city>
            </xsl:if>
            <xsl:if test="/imp1:message/sender/addressInformation/postalCode">
              <postalCode>
                <zip>
                  <xsl:value-of select="/imp1:message/sender/addressInformation/postalCode/zip"/>
                </zip>
                <area>
                  <xsl:value-of select="/imp1:message/sender/addressInformation/postalCode/area"/>
                </area>
              </postalCode>
            </xsl:if>
            <countryCode>
              <xsl:value-of select="/imp1:message/sender/addressInformation/countryCode"/>
            </countryCode>
          </addressInformation>
        </xsl:if>
        <xsl:for-each select="/imp1:message/sender/contactInformation">
          <contactInformation>
            <xsl:if test="phone">
              <phone>
                <xsl:value-of select="phone"/>
              </phone>
            </xsl:if>
            <xsl:if test="fax">
              <fax>
                <xsl:value-of select="fax"/>
              </fax>
            </xsl:if>
            <xsl:if test="email">
              <email>
                <xsl:value-of select="email"/>
              </email>
            </xsl:if>
          </contactInformation>
        </xsl:for-each>
      </sender>
      <receiver>
        <xsl:for-each select="/imp1:message/receiver/id">
          <id>
            <xsl:attribute name="entityIdTypeCoded">
              <xsl:value-of select="@entityIdTypeCoded"/>
            </xsl:attribute>
            <xsl:value-of select="."/>
          </id>
        </xsl:for-each>
        <xsl:if test="/imp1:message/receiver/name">
          <name>
            <xsl:value-of select="/imp1:message/receiver/name"/>
          </name>
        </xsl:if>
        <xsl:if test="/imp1:message/receiver/addressInformation">
          <addressInformation>
            <xsl:if test="/imp1:message/receiver/addressInformation/address">
              <address>
                <xsl:value-of select="/imp1:message/receiver/addressInformation/address"/>
              </address>
            </xsl:if>
            <xsl:if test="/imp1:message/receiver/addressInformation/city">
              <city>
                <xsl:value-of select="/imp1:message/receiver/addressInformation/city"/>
              </city>
            </xsl:if>
            <xsl:if test="/imp1:message/receiver/addressInformation/postalCode">
              <postalCode>
                <zip>
                  <xsl:value-of select="/imp1:message/receiver/addressInformation/postalCode/zip"/>
                </zip>
                <area>
                  <xsl:value-of select="/imp1:message/receiver/addressInformation/postalCode/area"/>
                </area>
              </postalCode>
            </xsl:if>
            <countryCode>
              <xsl:value-of select="/imp1:message/receiver/addressInformation/countryCode"/>
            </countryCode>
          </addressInformation>
        </xsl:if>
        <xsl:for-each select="/imp1:message/receiver/contactInformation">
          <contactInformation>
            <xsl:if test="phone">
              <phone>
                <xsl:value-of select="phone"/>
              </phone>
            </xsl:if>
            <xsl:if test="fax">
              <fax>
                <xsl:value-of select="fax"/>
              </fax>
            </xsl:if>
            <xsl:if test="email">
              <email>
                <xsl:value-of select="email"/>
              </email>
            </xsl:if>
          </contactInformation>
        </xsl:for-each>
      </receiver>
      <ns1:invoice>
        <xsl:if test="/imp1:message/ns1:invoice/@scope">
          <xsl:attribute name="scope">
            <xsl:value-of select="/imp1:message/ns1:invoice/@scope"/>
          </xsl:attribute>
        </xsl:if>
        <xsl:attribute name="documentNumber">
          <xsl:value-of select="/imp1:message/ns1:invoice/@documentNumber"/>
        </xsl:attribute>
        <xsl:attribute name="documentDate">
          <xsl:value-of select="/imp1:message/ns1:invoice/@documentDate"/>
        </xsl:attribute>
        <xsl:attribute name="schemaVersion">
          <xsl:value-of select="/imp1:message/ns1:invoice/@schemaVersion"/>
        </xsl:attribute>
        <xsl:if test="/imp1:message/ns1:invoice/@purpose">
          <xsl:attribute name="purpose">
            <xsl:value-of select="/imp1:message/ns1:invoice/@purpose"/>
          </xsl:attribute>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/@function">
          <xsl:attribute name="function">
            <xsl:value-of select="/imp1:message/ns1:invoice/@function"/>
          </xsl:attribute>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/@documentPlatform">
          <xsl:attribute name="documentPlatform">
            <xsl:value-of select="/imp1:message/ns1:invoice/@documentPlatform"/>
          </xsl:attribute>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/binaryDocumentFormat">
          <xsl:if test="/imp1:message/ns1:invoice/binaryDocumentFormat">
            <binaryDocumentFormat>
              <xsl:if test="/imp1:message/ns1:invoice/binaryDocumentFormat/@name">
                <xsl:attribute name="name">
                  <xsl:value-of select="/imp1:message/ns1:invoice/binaryDocumentFormat/@name"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="contentType">
                <xsl:value-of select="/imp1:message/ns1:invoice/binaryDocumentFormat/@contentType"/>
              </xsl:attribute>
              <xsl:value-of select="/imp1:message/ns1:invoice/binaryDocumentFormat"/>
            </binaryDocumentFormat>
          </xsl:if>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/binaryDocumentAttachment">
          <xsl:for-each select="/imp1:message/ns1:invoice/binaryDocumentAttachment">
            <binaryDocumentAttachment>
              <xsl:if test="@name">
                <xsl:attribute name="name">
                  <xsl:value-of select="@name"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="contentType">
                <xsl:value-of select="@contentType"/>
              </xsl:attribute>
              <xsl:if test="@documentNumber">
                <xsl:attribute name="documentNumber">
                  <xsl:value-of select="@documentNumber"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="@documentTypeCode">
                <xsl:attribute name="documentTypeCode">
                  <xsl:value-of select="@documentTypeCode"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="."/>
            </binaryDocumentAttachment>
          </xsl:for-each>
        </xsl:if>
        <xsl:for-each select="/imp1:message/ns1:invoice/documentLocation">
          <documentLocation>
            <locationURL>
              <xsl:value-of select="locationURL"/>
            </locationURL>
            <xsl:if test="description">
              <description>
                <xsl:value-of select="description"/>
              </description>
            </xsl:if>
          </documentLocation>
        </xsl:for-each>
        <seller>
          <xsl:for-each select="/imp1:message/ns1:invoice/seller/id">
            <id>
              <xsl:attribute name="entityIdTypeCoded">
                <xsl:value-of select="@entityIdTypeCoded"/>
              </xsl:attribute>
              <xsl:value-of select="."/>
            </id>
          </xsl:for-each>
          <name>
            <xsl:value-of select="/imp1:message/ns1:invoice/seller/name"/>
          </name>
          <addressInformation>
            <xsl:if test="/imp1:message/ns1:invoice/seller/addressInformation/address">
              <address>
                <xsl:value-of select="/imp1:message/ns1:invoice/seller/addressInformation/address"/>
              </address>
            </xsl:if>
            <xsl:if test="/imp1:message/ns1:invoice/seller/addressInformation/city">
              <city>
                <xsl:value-of select="/imp1:message/ns1:invoice/seller/addressInformation/city"/>
              </city>
            </xsl:if>
            <countryCode>
              <xsl:value-of select="/imp1:message/ns1:invoice/seller/addressInformation/countryCode"/>
            </countryCode>
          </addressInformation>
          <xsl:for-each select="/imp1:message/ns1:invoice/seller/contactInformation">
            <contactInformation>
              <xsl:if test="phone">
                <phone>
                  <xsl:value-of select="phone"/>
                </phone>
              </xsl:if>
              <xsl:if test="fax">
                <fax>
                  <xsl:value-of select="fax"/>
                </fax>
              </xsl:if>
              <xsl:if test="email">
                <email>
                  <xsl:value-of select="email"/>
                </email>
              </xsl:if>
            </contactInformation>
          </xsl:for-each>
          <xsl:for-each select="/imp1:message/ns1:invoice/seller/subDivision">
            <subDivision>
              <xsl:attribute name="subDivisionType">
                <xsl:value-of select="@subDivisionType"/>
              </xsl:attribute>
              <xsl:for-each select="id">
                <id>
                  <xsl:attribute name="entityIdTypeCoded">
                    <xsl:value-of select="@entityIdTypeCoded"/>
                  </xsl:attribute>
                  <xsl:value-of select="."/>
                </id>
              </xsl:for-each>
              <xsl:if test="name">
                <name>
                  <xsl:value-of select="name"/>
                </name>
              </xsl:if>
            </subDivision>
          </xsl:for-each>
          <vatNumber>
            <xsl:value-of select="/imp1:message/ns1:invoice/seller/vatNumber"/>
          </vatNumber>
          <commercialRegistrationNumber>
            <xsl:value-of select="/imp1:message/ns1:invoice/seller/commercialRegistrationNumber"/>
          </commercialRegistrationNumber>
          <commercialRegistrationLocation>
            <xsl:value-of select="/imp1:message/ns1:invoice/seller/commercialRegistrationLocation"/>
          </commercialRegistrationLocation>
          <socialCapital>
            <xsl:value-of select="/imp1:message/ns1:invoice/seller/socialCapital"/>
          </socialCapital>
        </seller>
        <buyer>
          <xsl:for-each select="/imp1:message/ns1:invoice/buyer/id">
            <id>
              <xsl:attribute name="entityIdTypeCoded">
                <xsl:value-of select="@entityIdTypeCoded"/>
              </xsl:attribute>
              <xsl:value-of select="."/>
            </id>
          </xsl:for-each>
          <name>
            <xsl:value-of select="/imp1:message/ns1:invoice/buyer/name"/>
          </name>
          <addressInformation>
            <xsl:if test="/imp1:message/ns1:invoice/buyer/addressInformation/address">
              <address>
                <xsl:value-of select="/imp1:message/ns1:invoice/buyer/addressInformation/address"/>
              </address>
            </xsl:if>
            <xsl:if test="/imp1:message/ns1:invoice/buyer/addressInformation/city">
              <city>
                <xsl:value-of select="/imp1:message/ns1:invoice/buyer/addressInformation/city"/>
              </city>
            </xsl:if>
            <countryCode>
              <xsl:value-of select="/imp1:message/ns1:invoice/buyer/addressInformation/countryCode"/>
            </countryCode>
          </addressInformation>
          <xsl:for-each select="/imp1:message/ns1:invoice/buyer/contactInformation">
            <contactInformation>
              <xsl:if test="phone">
                <phone>
                  <xsl:value-of select="phone"/>
                </phone>
              </xsl:if>
              <xsl:if test="fax">
                <fax>
                  <xsl:value-of select="fax"/>
                </fax>
              </xsl:if>
              <xsl:if test="email">
                <email>
                  <xsl:value-of select="email"/>
                </email>
              </xsl:if>
            </contactInformation>
          </xsl:for-each>
          <xsl:for-each select="/imp1:message/ns1:invoice/buyer/subDivision">
            <subDivision>
              <xsl:attribute name="subDivisionType">
                <xsl:value-of select="@subDivisionType"/>
              </xsl:attribute>
              <xsl:for-each select="id">
                <id>
                  <xsl:attribute name="entityIdTypeCoded">
                    <xsl:value-of select="@entityIdTypeCoded"/>
                  </xsl:attribute>
                  <xsl:value-of select="."/>
                </id>
              </xsl:for-each>
              <xsl:if test="name">
                <name>
                  <xsl:value-of select="name"/>
                </name>
              </xsl:if>
            </subDivision>
          </xsl:for-each>
          <vatNumber>
            <xsl:value-of select="/imp1:message/ns1:invoice/buyer/vatNumber"/>
          </vatNumber>
          <xsl:if test="/imp1:message/ns1:invoice/buyer/commercialRegistrationNumber">
            <commercialRegistrationNumber>
              <xsl:value-of select="/imp1:message/ns1:invoice/buyer/commercialRegistrationNumber"/>
            </commercialRegistrationNumber>
          </xsl:if>
          <xsl:if test="/imp1:message/ns1:invoice/buyer/commercialRegistrationLocation">
            <commercialRegistrationLocation>
              <xsl:value-of select="/imp1:message/ns1:invoice/buyer/commercialRegistrationLocation"/>
            </commercialRegistrationLocation>
          </xsl:if>
          <xsl:if test="/imp1:message/ns1:invoice/buyer/socialCapital">
            <socialCapital>
              <xsl:value-of select="/imp1:message/ns1:invoice/buyer/socialCapital"/>
            </socialCapital>
          </xsl:if>
        </buyer>
        <billTo>
          <xsl:for-each select="/imp1:message/ns1:invoice/billTo/id">
            <id>
              <xsl:attribute name="entityIdTypeCoded">
                <xsl:value-of select="@entityIdTypeCoded"/>
              </xsl:attribute>
              <xsl:value-of select="."/>
            </id>
          </xsl:for-each>
          <name>
            <xsl:value-of select="/imp1:message/ns1:invoice/billTo/name"/>
          </name>
          <addressInformation>
            <xsl:if test="/imp1:message/ns1:invoice/billTo/addressInformation/address">
              <address>
                <xsl:value-of select="/imp1:message/ns1:invoice/billTo/addressInformation/address"/>
              </address>
            </xsl:if>
            <xsl:if test="/imp1:message/ns1:invoice/billTo/addressInformation/city">
              <city>
                <xsl:value-of select="/imp1:message/ns1:invoice/billTo/addressInformation/city"/>
              </city>
            </xsl:if>
            <countryCode>
              <xsl:value-of select="/imp1:message/ns1:invoice/billTo/addressInformation/countryCode"/>
            </countryCode>
          </addressInformation>
          <xsl:for-each select="/imp1:message/ns1:invoice/billTo/contactInformation">
            <contactInformation>
              <xsl:if test="phone">
                <phone>
                  <xsl:value-of select="phone"/>
                </phone>
              </xsl:if>
              <xsl:if test="fax">
                <fax>
                  <xsl:value-of select="fax"/>
                </fax>
              </xsl:if>
              <xsl:if test="email">
                <email>
                  <xsl:value-of select="email"/>
                </email>
              </xsl:if>
            </contactInformation>
          </xsl:for-each>
          <xsl:for-each select="/imp1:message/ns1:invoice/billTo/subDivision">
            <subDivision>
              <xsl:attribute name="subDivisionType">
                <xsl:value-of select="@subDivisionType"/>
              </xsl:attribute>
              <xsl:for-each select="id">
                <id>
                  <xsl:attribute name="entityIdTypeCoded">
                    <xsl:value-of select="@entityIdTypeCoded"/>
                  </xsl:attribute>
                  <xsl:value-of select="."/>
                </id>
              </xsl:for-each>
              <xsl:if test="name">
                <name>
                  <xsl:value-of select="name"/>
                </name>
              </xsl:if>
            </subDivision>
          </xsl:for-each>
          <vatNumber>
            <xsl:value-of select="/imp1:message/ns1:invoice/billTo/vatNumber"/>
          </vatNumber>
          <xsl:if test="/imp1:message/ns1:invoice/billTo/commercialRegistrationNumber">
            <commercialRegistrationNumber>
              <xsl:value-of select="/imp1:message/ns1:invoice/billTo/commercialRegistrationNumber"/>
            </commercialRegistrationNumber>
          </xsl:if>
          <xsl:if test="/imp1:message/ns1:invoice/billTo/commercialRegistrationLocation">
            <commercialRegistrationLocation>
              <xsl:value-of select="/imp1:message/ns1:invoice/billTo/commercialRegistrationLocation"/>
            </commercialRegistrationLocation>
          </xsl:if>
          <xsl:if test="/imp1:message/ns1:invoice/billTo/socialCapital">
            <socialCapital>
              <xsl:value-of select="/imp1:message/ns1:invoice/billTo/socialCapital"/>
            </socialCapital>
          </xsl:if>
        </billTo>
        <xsl:if test="/imp1:message/ns1:invoice/shipTo">
          <shipTo>
            <xsl:for-each select="/imp1:message/ns1:invoice/shipTo/id">
              <id>
                <xsl:attribute name="entityIdTypeCoded">
                  <xsl:value-of select="@entityIdTypeCoded"/>
                </xsl:attribute>
                <xsl:value-of select="."/>
              </id>
            </xsl:for-each>
            <xsl:if test="/imp1:message/ns1:invoice/shipTo/name">
              <name>
                <xsl:value-of select="/imp1:message/ns1:invoice/shipTo/name"/>
              </name>
            </xsl:if>
            <xsl:if test="/imp1:message/ns1:invoice/shipTo/addressInformation">
              <addressInformation>
                <xsl:if test="/imp1:message/ns1:invoice/shipTo/addressInformation/address">
                  <address>
                    <xsl:value-of select="/imp1:message/ns1:invoice/shipTo/addressInformation/address"/>
                  </address>
                </xsl:if>
                <xsl:if test="/imp1:message/ns1:invoice/shipTo/addressInformation/city">
                  <city>
                    <xsl:value-of select="/imp1:message/ns1:invoice/shipTo/addressInformation/city"/>
                  </city>
                </xsl:if>
                <countryCode>
                  <xsl:value-of select="/imp1:message/ns1:invoice/shipTo/addressInformation/countryCode"/>
                </countryCode>
              </addressInformation>
            </xsl:if>
            <xsl:for-each select="/imp1:message/ns1:invoice/shipTo/contactInformation">
              <contactInformation>
                <xsl:if test="phone">
                  <phone>
                    <xsl:value-of select="phone"/>
                  </phone>
                </xsl:if>
                <xsl:if test="fax">
                  <fax>
                    <xsl:value-of select="fax"/>
                  </fax>
                </xsl:if>
                <xsl:if test="email">
                  <email>
                    <xsl:value-of select="email"/>
                  </email>
                </xsl:if>
              </contactInformation>
            </xsl:for-each>
            <xsl:for-each select="/imp1:message/ns1:invoice/shipTo/subDivision">
              <subDivision>
                <xsl:attribute name="subDivisionType">
                  <xsl:value-of select="@subDivisionType"/>
                </xsl:attribute>
                <xsl:for-each select="id">
                  <id>
                    <xsl:attribute name="entityIdTypeCoded">
                      <xsl:value-of select="@entityIdTypeCoded"/>
                    </xsl:attribute>
                    <xsl:value-of select="."/>
                  </id>
                </xsl:for-each>
                <xsl:if test="name">
                  <name>
                    <xsl:value-of select="name"/>
                  </name>
                </xsl:if>
              </subDivision>
            </xsl:for-each>
          </shipTo>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/additionalDate">
          <xsl:for-each select="/imp1:message/ns1:invoice/additionalDate">
            <additionalDate>
              <xsl:attribute name="type">
                <xsl:value-of select="@type"/>
              </xsl:attribute>
              <xsl:value-of select="."/>
            </additionalDate>
          </xsl:for-each>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/reference">
          <xsl:for-each select="/imp1:message/ns1:invoice/reference">
            <reference>
              <xsl:attribute name="type">
                <xsl:value-of select="@type"/>
              </xsl:attribute>
              <xsl:if test="@referencedDocumentDate">
                <xsl:attribute name="referencedDocumentDate">
                  <xsl:value-of select="@referencedDocumentDate"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="@referencedDocumentId">
                <xsl:attribute name="referencedDocumentId">
                  <xsl:value-of select="@referencedDocumentId"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="@lineId">
                <xsl:attribute name="lineId">
                  <xsl:value-of select="@lineId"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="."/>
            </reference>
          </xsl:for-each>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/transportInformation">
          <transportInformation>
            <xsl:for-each select="/imp1:message/ns1:invoice/transportInformation/transportEquipmentId">
              <transportEquipmentId>
                <xsl:value-of select="."/>
              </transportEquipmentId>
            </xsl:for-each>
            <xsl:if test="/imp1:message/ns1:invoice/transportInformation/transportRouteId">
              <transportRouteId>
                <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/transportRouteId"/>
              </transportRouteId>
            </xsl:if>
            <xsl:if test="/imp1:message/ns1:invoice/transportInformation/loadLocationAddress">
              <loadLocationAddress>
                <xsl:if test="/imp1:message/ns1:invoice/transportInformation/loadLocationAddress/address">
                  <address>
                    <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/loadLocationAddress/address"/>
                  </address>
                </xsl:if>
                <xsl:if test="/imp1:message/ns1:invoice/transportInformation/loadLocationAddress/city">
                  <city>
                    <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/loadLocationAddress/city"/>
                  </city>
                </xsl:if>
                <xsl:if test="/imp1:message/ns1:invoice/transportInformation/loadLocationAddress/postalCode">
                  <postalCode>
                    <zip>
                      <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/loadLocationAddress/postalCode/zip"/>
                    </zip>
                    <area>
                      <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/loadLocationAddress/postalCode/area"/>
                    </area>
                  </postalCode>
                </xsl:if>
                <countryCode>
                  <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/loadLocationAddress/countryCode"/>
                </countryCode>
              </loadLocationAddress>
            </xsl:if>
            <xsl:if test="/imp1:message/ns1:invoice/transportInformation/unloadLocationAddress">
              <unloadLocationAddress>
                <xsl:if test="/imp1:message/ns1:invoice/transportInformation/unloadLocationAddress/address">
                  <address>
                    <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/unloadLocationAddress/address"/>
                  </address>
                </xsl:if>
                <xsl:if test="/imp1:message/ns1:invoice/transportInformation/unloadLocationAddress/city">
                  <city>
                    <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/unloadLocationAddress/city"/>
                  </city>
                </xsl:if>
                <xsl:if test="/imp1:message/ns1:invoice/transportInformation/unloadLocationAddress/postalCode">
                  <postalCode>
                    <zip>
                      <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/unloadLocationAddress/postalCode/zip"/>
                    </zip>
                    <area>
                      <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/unloadLocationAddress/postalCode/area"/>
                    </area>
                  </postalCode>
                </xsl:if>
                <countryCode>
                  <xsl:value-of select="/imp1:message/ns1:invoice/transportInformation/unloadLocationAddress/countryCode"/>
                </countryCode>
              </unloadLocationAddress>
            </xsl:if>
          </transportInformation>
        </xsl:if>
        <currencyCode>
          <xsl:value-of select="/imp1:message/ns1:invoice/currencyCode"/>
        </currencyCode>
        <xsl:for-each select="/imp1:message/ns1:invoice/discount">
          <discount>
            <xsl:attribute name="type">
              <xsl:value-of select="@type"/>
            </xsl:attribute>
            <xsl:if test="@applicationSequence">
              <xsl:attribute name="applicationSequence">
                <xsl:value-of select="@applicationSequence"/>
              </xsl:attribute>
            </xsl:if>
            <amount>
              <xsl:value-of select="amount"/>
            </amount>
            <xsl:if test="percentage">
              <percentage>
                <xsl:value-of select="percentage"/>
              </percentage>
            </xsl:if>
            <xsl:if test="taxableAmount">
              <taxableAmount>
                <xsl:value-of select="taxableAmount"/>
              </taxableAmount>
            </xsl:if>
            <xsl:if test="description">
              <description>
                <xsl:value-of select="description"/>
              </description>
            </xsl:if>
          </discount>
        </xsl:for-each>
        <xsl:for-each select="/imp1:message/ns1:invoice/charge">
          <charge>
            <xsl:attribute name="type">
              <xsl:value-of select="@type"/>
            </xsl:attribute>
            <xsl:if test="@applicationSequence">
              <xsl:attribute name="applicationSequence">
                <xsl:value-of select="@applicationSequence"/>
              </xsl:attribute>
            </xsl:if>
            <amount>
              <xsl:value-of select="amount"/>
            </amount>
            <xsl:if test="percentage">
              <percentage>
                <xsl:value-of select="percentage"/>
              </percentage>
            </xsl:if>
            <xsl:if test="taxableAmount">
              <taxableAmount>
                <xsl:value-of select="taxableAmount"/>
              </taxableAmount>
            </xsl:if>
            <xsl:if test="description">
              <description>
                <xsl:value-of select="description"/>
              </description>
            </xsl:if>
          </charge>
        </xsl:for-each>
        <xsl:if test="/imp1:message/ns1:invoice/comment">
          <xsl:for-each select="/imp1:message/ns1:invoice/comment">
            <comment>
              <xsl:if test="@id">
                <xsl:attribute name="id">
                  <xsl:value-of select="@id"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="."/>
            </comment>
          </xsl:for-each>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/senderSoftwareCertificationNumber">
          <senderSoftwareCertificationNumber>
            <xsl:value-of select="/imp1:message/ns1:invoice/senderSoftwareCertificationNumber"/>
          </senderSoftwareCertificationNumber>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/senderSoftwareDocumentSignatureHash">
          <senderSoftwareDocumentSignatureHash>
            <xsl:value-of select="/imp1:message/ns1:invoice/senderSoftwareDocumentSignatureHash"/>
          </senderSoftwareDocumentSignatureHash>
        </xsl:if>
        <xsl:for-each select="/imp1:message/ns1:invoice/paymentMethod">
          <paymentMethod>
            <directDebitPayment>
              <debitAuthorization>
                <xsl:value-of select="directDebitPayment/debitAuthorization"/>
              </debitAuthorization>
              <ibanCode>
                <xsl:value-of select="directDebitPayment/ibanCode"/>
              </ibanCode>
              <debitDate>
                <xsl:value-of select="directDebitPayment/debitDate"/>
              </debitDate>
            </directDebitPayment>
            <entityCodeReferencePayment>
              <paymentEntityCode>
                <xsl:value-of select="entityCodeReferencePayment/paymentEntityCode"/>
              </paymentEntityCode>
              <paymentReference>
                <xsl:value-of select="entityCodeReferencePayment/paymentReference"/>
              </paymentReference>
              <paymentDueDate>
                <xsl:value-of select="entityCodeReferencePayment/paymentDueDate"/>
              </paymentDueDate>
            </entityCodeReferencePayment>
          </paymentMethod>
        </xsl:for-each>
        <xsl:if test="/imp1:message/ns1:invoice/ptPublicAdminSicSpecificData">
          <ptPublicAdminSicSpecificData>
            <incomeClassification>
              <xsl:value-of select="/imp1:message/ns1:invoice/ptPublicAdminSicSpecificData/incomeClassification"/>
            </incomeClassification>
            <nib>
              <xsl:value-of select="/imp1:message/ns1:invoice/ptPublicAdminSicSpecificData/nib"/>
            </nib>
            <commitment>
              <xsl:value-of select="/imp1:message/ns1:invoice/ptPublicAdminSicSpecificData/commitment"/>
            </commitment>
          </ptPublicAdminSicSpecificData>
        </xsl:if>
        <xsl:for-each select="/imp1:message/ns1:invoice/lineItem">
          <lineItem>
            <xsl:if test="@number">
              <xsl:attribute name="number">
                <xsl:value-of select="@number"/>
              </xsl:attribute>
            </xsl:if>
            <xsl:if test="gtinCode">
              <gtinCode>
                <xsl:value-of select="gtinCode"/>
              </gtinCode>
            </xsl:if>
            <xsl:if test="sellerItemCode">
              <sellerItemCode>
                <xsl:value-of select="sellerItemCode"/>
              </sellerItemCode>
            </xsl:if>
            <xsl:if test="buyerItemCode">
              <buyerItemCode>
                <xsl:value-of select="buyerItemCode"/>
              </buyerItemCode>
            </xsl:if>
            <xsl:if test="description">
              <description>
                <xsl:value-of select="description"/>
              </description>
            </xsl:if>
            <xsl:if test="comment">
              <comment>
                <xsl:if test="comment/@id">
                  <xsl:attribute name="id">
                    <xsl:value-of select="comment/@id"/>
                  </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="comment"/>
              </comment>
            </xsl:if>
            <quantity>
              <value>
                <xsl:value-of select="quantity/value"/>
              </value>
              <unitOfMeasure>
                <xsl:value-of select="quantity/unitOfMeasure"/>
              </unitOfMeasure>
            </quantity>
            <xsl:if test="freeQuantity">
              <freeQuantity>
                <value>
                  <xsl:value-of select="freeQuantity/value"/>
                </value>
                <unitOfMeasure>
                  <xsl:value-of select="freeQuantity/unitOfMeasure"/>
                </unitOfMeasure>
              </freeQuantity>
            </xsl:if>
            <xsl:if test="itemDate">
              <xsl:for-each select="itemDate">
                <itemDate>
                  <xsl:attribute name="type">
                    <xsl:value-of select="@type"/>
                  </xsl:attribute>
                  <xsl:value-of select="."/>
                </itemDate>
              </xsl:for-each>
            </xsl:if>
            <xsl:if test="additionalDate">
              <xsl:for-each select="additionalDate">
                <additionalDate>
                  <xsl:attribute name="type">
                    <xsl:value-of select="@type"/>
                  </xsl:attribute>
                  <xsl:value-of select="."/>
                </additionalDate>
              </xsl:for-each>
            </xsl:if>
            <xsl:if test="netUnitPrice">
              <netUnitPrice>
                <xsl:value-of select="netUnitPrice"/>
              </netUnitPrice>
            </xsl:if>
            <xsl:if test="grossUnitPrice">
              <grossUnitPrice>
                <xsl:value-of select="grossUnitPrice"/>
              </grossUnitPrice>
            </xsl:if>
            <xsl:if test="priceBasisQuantity">
              <priceBasisQuantity>
                <value>
                  <xsl:value-of select="priceBasisQuantity/value"/>
                </value>
                <unitOfMeasure>
                  <xsl:value-of select="priceBasisQuantity/unitOfMeasure"/>
                </unitOfMeasure>
              </priceBasisQuantity>
            </xsl:if>
            <xsl:if test="quantityOfPackages">
              <quantityOfPackages>
                <value>
                  <xsl:value-of select="quantityOfPackages/value"/>
                </value>
                <packageType>
                  <xsl:value-of select="quantityOfPackages/packageType"/>
                </packageType>
                <xsl:if test="quantityOfPackages/quantityPerPackage">
                  <quantityPerPackage>
                    <value>
                      <xsl:value-of select="quantityOfPackages/quantityPerPackage/value"/>
                    </value>
                    <unitOfMeasure>
                      <xsl:value-of select="quantityOfPackages/quantityPerPackage/unitOfMeasure"/>
                    </unitOfMeasure>
                  </quantityPerPackage>
                </xsl:if>
                <xsl:for-each select="quantityOfPackages/containedPackage">
                  <containedPackage>
                    <value>
                      <xsl:value-of select="value"/>
                    </value>
                    <packageType>
                      <xsl:value-of select="packageType"/>
                    </packageType>
                  </containedPackage>
                </xsl:for-each>
              </quantityOfPackages>
            </xsl:if>
            <xsl:if test="vatPercentage">
              <xsl:for-each select="vatPercentage">
                <vatPercentage>
                  <xsl:if test="@vatExemptionReason">
                    <xsl:attribute name="vatExemptionReason">
                      <xsl:value-of select="@vatExemptionReason"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:value-of select="."/>
                </vatPercentage>
              </xsl:for-each>
            </xsl:if>
            <xsl:for-each select="itemDeliveryInformation">
              <itemDeliveryInformation>
                <shipTo>
                  <xsl:for-each select="shipTo/id">
                    <id>
                      <xsl:attribute name="entityIdTypeCoded">
                        <xsl:value-of select="@entityIdTypeCoded"/>
                      </xsl:attribute>
                      <xsl:value-of select="."/>
                    </id>
                  </xsl:for-each>
                  <xsl:if test="shipTo/name">
                    <name>
                      <xsl:value-of select="shipTo/name"/>
                    </name>
                  </xsl:if>
                </shipTo>
                <quantity>
                  <value>
                    <xsl:value-of select="quantity/value"/>
                  </value>
                  <unitOfMeasure>
                    <xsl:value-of select="quantity/unitOfMeasure"/>
                  </unitOfMeasure>
                </quantity>
                <xsl:if test="quantityOfPackages">
                  <quantityOfPackages>
                    <value>
                      <xsl:value-of select="quantityOfPackages/value"/>
                    </value>
                    <packageType>
                      <xsl:value-of select="quantityOfPackages/packageType"/>
                    </packageType>
                  </quantityOfPackages>
                </xsl:if>
                <xsl:if test="comment">
                  <comment>
                    <xsl:value-of select="comment"/>
                  </comment>
                </xsl:if>
                <xsl:if test="deliveryRelatedDateTime">
                  <xsl:for-each select="deliveryRelatedDateTime">
                    <deliveryRelatedDateTime>
                      <xsl:attribute name="type">
                        <xsl:value-of select="@type"/>
                      </xsl:attribute>
                      <xsl:value-of select="."/>
                    </deliveryRelatedDateTime>
                  </xsl:for-each>
                </xsl:if>
                <xsl:if test="reference">
                  <xsl:for-each select="reference">
                    <reference>
                      <xsl:attribute name="type">
                        <xsl:value-of select="@type"/>
                      </xsl:attribute>
                      <xsl:if test="@referencedDocumentDate">
                        <xsl:attribute name="referencedDocumentDate">
                          <xsl:value-of select="@referencedDocumentDate"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="@referencedDocumentId">
                        <xsl:attribute name="referencedDocumentId">
                          <xsl:value-of select="@referencedDocumentId"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="@lineId">
                        <xsl:attribute name="lineId">
                          <xsl:value-of select="@lineId"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:value-of select="."/>
                    </reference>
                  </xsl:for-each>
                </xsl:if>
                <xsl:if test="label">
                  <label>
                    <xsl:value-of select="label"/>
                  </label>
                </xsl:if>
              </itemDeliveryInformation>
            </xsl:for-each>
            <xsl:if test="batchNumber">
              <xsl:for-each select="batchNumber">
                <batchNumber>
                  <xsl:value-of select="."/>
                </batchNumber>
              </xsl:for-each>
            </xsl:if>
            <xsl:if test="vatAmount">
              <vatAmount>
                <xsl:value-of select="vatAmount"/>
              </vatAmount>
            </xsl:if>
            <xsl:for-each select="discount">
              <discount>
                <xsl:attribute name="type">
                  <xsl:value-of select="@type"/>
                </xsl:attribute>
                <xsl:if test="@applicationSequence">
                  <xsl:attribute name="applicationSequence">
                    <xsl:value-of select="@applicationSequence"/>
                  </xsl:attribute>
                </xsl:if>
                <amount>
                  <xsl:value-of select="amount"/>
                </amount>
                <xsl:if test="percentage">
                  <percentage>
                    <xsl:value-of select="percentage"/>
                  </percentage>
                </xsl:if>
                <xsl:if test="taxableAmount">
                  <taxableAmount>
                    <xsl:value-of select="taxableAmount"/>
                  </taxableAmount>
                </xsl:if>
                <xsl:if test="description">
                  <description>
                    <xsl:value-of select="description"/>
                  </description>
                </xsl:if>
              </discount>
            </xsl:for-each>
            <xsl:for-each select="charge">
              <charge>
                <xsl:attribute name="type">
                  <xsl:value-of select="@type"/>
                </xsl:attribute>
                <xsl:if test="@applicationSequence">
                  <xsl:attribute name="applicationSequence">
                    <xsl:value-of select="@applicationSequence"/>
                  </xsl:attribute>
                </xsl:if>
                <amount>
                  <xsl:value-of select="amount"/>
                </amount>
                <xsl:if test="percentage">
                  <percentage>
                    <xsl:value-of select="percentage"/>
                  </percentage>
                </xsl:if>
                <xsl:if test="taxableAmount">
                  <taxableAmount>
                    <xsl:value-of select="taxableAmount"/>
                  </taxableAmount>
                </xsl:if>
                <xsl:if test="description">
                  <description>
                    <xsl:value-of select="description"/>
                  </description>
                </xsl:if>
              </charge>
            </xsl:for-each>
            <xsl:if test="quantityConversionFactor">
              <quantityConversionFactor>
                <value>
                  <xsl:value-of select="quantityConversionFactor/value"/>
                </value>
                <unitOfMeasure>
                  <xsl:value-of select="quantityConversionFactor/unitOfMeasure"/>
                </unitOfMeasure>
              </quantityConversionFactor>
            </xsl:if>
            <xsl:if test="taxableAmount">
              <taxableAmount>
                <xsl:value-of select="taxableAmount"/>
              </taxableAmount>
            </xsl:if>
            <netAmount>
              <xsl:value-of select="netAmount"/>
            </netAmount>
            <xsl:if test="reference">
              <xsl:for-each select="reference">
                <reference>
                  <xsl:attribute name="type">
                    <xsl:value-of select="@type"/>
                  </xsl:attribute>
                  <xsl:if test="@referencedDocumentDate">
                    <xsl:attribute name="referencedDocumentDate">
                      <xsl:value-of select="@referencedDocumentDate"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="@referencedDocumentId">
                    <xsl:attribute name="referencedDocumentId">
                      <xsl:value-of select="@referencedDocumentId"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="@lineId">
                    <xsl:attribute name="lineId">
                      <xsl:value-of select="@lineId"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:value-of select="."/>
                </reference>
              </xsl:for-each>
            </xsl:if>
          </lineItem>
        </xsl:for-each>
        <xsl:for-each select="/imp1:message/ns1:invoice/vatSummary">
          <vatSummary>
            <xsl:if test="@exemptionReason">
              <xsl:attribute name="exemptionReason">
                <xsl:value-of select="@exemptionReason"/>
              </xsl:attribute>
            </xsl:if>
            <vatPercentage>
              <xsl:value-of select="vatPercentage"/>
            </vatPercentage>
            <vatAmount>
              <xsl:value-of select="vatAmount"/>
            </vatAmount>
            <taxableAmount>
              <xsl:value-of select="taxableAmount"/>
            </taxableAmount>
          </vatSummary>
        </xsl:for-each>
        <xsl:for-each select="/imp1:message/ns1:invoice/chargeSummary">
          <chargeSummary>
            <xsl:attribute name="type">
              <xsl:value-of select="@type"/>
            </xsl:attribute>
            <xsl:if test="@applicationSequence">
              <xsl:attribute name="applicationSequence">
                <xsl:value-of select="@applicationSequence"/>
              </xsl:attribute>
            </xsl:if>
            <amount>
              <xsl:value-of select="amount"/>
            </amount>
            <xsl:if test="percentage">
              <percentage>
                <xsl:value-of select="percentage"/>
              </percentage>
            </xsl:if>
            <xsl:if test="taxableAmount">
              <taxableAmount>
                <xsl:value-of select="taxableAmount"/>
              </taxableAmount>
            </xsl:if>
            <xsl:if test="description">
              <description>
                <xsl:value-of select="description"/>
              </description>
            </xsl:if>
          </chargeSummary>
        </xsl:for-each>
        <totalVatAmount>
          <xsl:value-of select="/imp1:message/ns1:invoice/totalVatAmount"/>
        </totalVatAmount>
        <totalTaxableAmount>
          <xsl:value-of select="/imp1:message/ns1:invoice/totalTaxableAmount"/>
        </totalTaxableAmount>
        <xsl:if test="/imp1:message/ns1:invoice/totalPackageAmount">
          <totalPackageAmount>
            <xsl:value-of select="/imp1:message/ns1:invoice/totalPackageAmount"/>
          </totalPackageAmount>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/totalNetAmount">
          <totalNetAmount>
            <xsl:value-of select="/imp1:message/ns1:invoice/totalNetAmount"/>
          </totalNetAmount>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/totalGrossAmount">
          <totalGrossAmount>
            <xsl:value-of select="/imp1:message/ns1:invoice/totalGrossAmount"/>
          </totalGrossAmount>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/totalDiscountAmount">
          <totalDiscountAmount>
            <xsl:value-of select="/imp1:message/ns1:invoice/totalDiscountAmount"/>
          </totalDiscountAmount>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:invoice/totalChargeAmount">
          <totalChargeAmount>
            <xsl:value-of select="/imp1:message/ns1:invoice/totalChargeAmount"/>
          </totalChargeAmount>
        </xsl:if>
        <totalPayableAmount>
          <xsl:if test="/imp1:message/ns1:invoice/totalPayableAmount/@textAmount">
            <xsl:attribute name="textAmount">
              <xsl:value-of select="/imp1:message/ns1:invoice/totalPayableAmount/@textAmount"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:value-of select="/imp1:message/ns1:invoice/totalPayableAmount"/>
        </totalPayableAmount>
        <?oracle-xsl-mapper-position imp1:genericDocument?>
      </ns1:invoice>
    </imp1:message>
  </xsl:template>
</xsl:stylesheet>
