<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../UploadFTPAdapter.wsdl"/>
      <rootElement name="message" namespace="urn:netdocs:schemas:message"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="../UploadFTPAdapter.wsdl"/>
      <rootElement name="message" namespace="urn:netdocs:schemas:message"/>
    </target>
  </mapTargets>
  <substitutions>
      <sourceSubst substPath="/imp1:message/imp1:genericDocument" substElem="ns1:documentStatus"/>
  </substitutions>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.6.0(build 111214.0600.1553) AT [MON APR 29 11:57:04 WEST 2013]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:imp1="urn:netdocs:schemas:message"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/ftp/Saude365/HSN/UploadFTPAdapter"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns1="urn:netdocs:schemas:document"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:bpmn="http://schemas.oracle.com/bpm/xpath"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl imp1 plt wsdl tns jca ns1 xsd xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap">
  <xsl:template match="/">
    <imp1:message>
      <xsl:attribute name="id">
        <xsl:value-of select="/imp1:message/@id"/>
      </xsl:attribute>
      <xsl:attribute name="creationDateTime">
        <xsl:value-of select="/imp1:message/@creationDateTime"/>
      </xsl:attribute>
      <sender>
        <xsl:for-each select="/imp1:message/sender/id">
          <id>
            <xsl:attribute name="entityIdTypeCoded">
              <xsl:value-of select="@entityIdTypeCoded"/>
            </xsl:attribute>
            <xsl:value-of select="."/>
          </id>
        </xsl:for-each>
        <xsl:if test="/imp1:message/sender/name">
          <name>
            <xsl:value-of select="/imp1:message/sender/name"/>
          </name>
        </xsl:if>
        <xsl:if test="/imp1:message/sender/addressInformation">
          <addressInformation>
            <xsl:if test="/imp1:message/sender/addressInformation/address">
              <address>
                <xsl:value-of select="/imp1:message/sender/addressInformation/address"/>
              </address>
            </xsl:if>
            <xsl:if test="/imp1:message/sender/addressInformation/city">
              <city>
                <xsl:value-of select="/imp1:message/sender/addressInformation/city"/>
              </city>
            </xsl:if>
            <xsl:if test="/imp1:message/sender/addressInformation/postalCode">
              <postalCode>
                <zip>
                  <xsl:value-of select="/imp1:message/sender/addressInformation/postalCode/zip"/>
                </zip>
                <area>
                  <xsl:value-of select="/imp1:message/sender/addressInformation/postalCode/area"/>
                </area>
              </postalCode>
            </xsl:if>
            <countryCode>
              <xsl:value-of select="/imp1:message/sender/addressInformation/countryCode"/>
            </countryCode>
          </addressInformation>
        </xsl:if>
        <xsl:for-each select="/imp1:message/sender/contactInformation">
          <contactInformation>
            <xsl:if test="phone">
              <phone>
                <xsl:value-of select="phone"/>
              </phone>
            </xsl:if>
            <xsl:if test="fax">
              <fax>
                <xsl:value-of select="fax"/>
              </fax>
            </xsl:if>
            <xsl:if test="email">
              <email>
                <xsl:value-of select="email"/>
              </email>
            </xsl:if>
          </contactInformation>
        </xsl:for-each>
      </sender>
      <receiver>
        <xsl:for-each select="/imp1:message/receiver/id">
          <id>
            <xsl:attribute name="entityIdTypeCoded">
              <xsl:value-of select="@entityIdTypeCoded"/>
            </xsl:attribute>
            <xsl:value-of select="."/>
          </id>
        </xsl:for-each>
        <xsl:if test="/imp1:message/receiver/name">
          <name>
            <xsl:value-of select="/imp1:message/receiver/name"/>
          </name>
        </xsl:if>
        <xsl:if test="/imp1:message/receiver/addressInformation">
          <addressInformation>
            <xsl:if test="/imp1:message/receiver/addressInformation/address">
              <address>
                <xsl:value-of select="/imp1:message/receiver/addressInformation/address"/>
              </address>
            </xsl:if>
            <xsl:if test="/imp1:message/receiver/addressInformation/city">
              <city>
                <xsl:value-of select="/imp1:message/receiver/addressInformation/city"/>
              </city>
            </xsl:if>
            <xsl:if test="/imp1:message/receiver/addressInformation/postalCode">
              <postalCode>
                <zip>
                  <xsl:value-of select="/imp1:message/receiver/addressInformation/postalCode/zip"/>
                </zip>
                <area>
                  <xsl:value-of select="/imp1:message/receiver/addressInformation/postalCode/area"/>
                </area>
              </postalCode>
            </xsl:if>
            <countryCode>
              <xsl:value-of select="/imp1:message/receiver/addressInformation/countryCode"/>
            </countryCode>
          </addressInformation>
        </xsl:if>
        <xsl:for-each select="/imp1:message/receiver/contactInformation">
          <contactInformation>
            <xsl:if test="phone">
              <phone>
                <xsl:value-of select="phone"/>
              </phone>
            </xsl:if>
            <xsl:if test="fax">
              <fax>
                <xsl:value-of select="fax"/>
              </fax>
            </xsl:if>
            <xsl:if test="email">
              <email>
                <xsl:value-of select="email"/>
              </email>
            </xsl:if>
          </contactInformation>
        </xsl:for-each>
      </receiver>
      <ns1:documentStatus>
        <xsl:attribute name="documentNumber">
          <xsl:value-of select="/imp1:message/ns1:documentStatus/@documentNumber"/>
        </xsl:attribute>
        <xsl:attribute name="documentDate">
          <xsl:value-of select="/imp1:message/ns1:documentStatus/@documentDate"/>
        </xsl:attribute>
        <xsl:attribute name="schemaVersion">
          <xsl:value-of select="/imp1:message/ns1:documentStatus/@schemaVersion"/>
        </xsl:attribute>
        <xsl:if test="/imp1:message/ns1:documentStatus/@purpose">
          <xsl:attribute name="purpose">
            <xsl:value-of select="/imp1:message/ns1:documentStatus/@purpose"/>
          </xsl:attribute>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:documentStatus/@function">
          <xsl:attribute name="function">
            <xsl:value-of select="/imp1:message/ns1:documentStatus/@function"/>
          </xsl:attribute>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:documentStatus/@documentPlatform">
          <xsl:attribute name="documentPlatform">
            <xsl:value-of select="/imp1:message/ns1:documentStatus/@documentPlatform"/>
          </xsl:attribute>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:documentStatus/binaryDocumentFormat">
          <xsl:if test="/imp1:message/ns1:documentStatus/binaryDocumentFormat">
            <binaryDocumentFormat>
              <xsl:if test="/imp1:message/ns1:documentStatus/binaryDocumentFormat/@name">
                <xsl:attribute name="name">
                  <xsl:value-of select="/imp1:message/ns1:documentStatus/binaryDocumentFormat/@name"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="contentType">
                <xsl:value-of select="/imp1:message/ns1:documentStatus/binaryDocumentFormat/@contentType"/>
              </xsl:attribute>
              <xsl:value-of select="/imp1:message/ns1:documentStatus/binaryDocumentFormat"/>
            </binaryDocumentFormat>
          </xsl:if>
        </xsl:if>
        <xsl:if test="/imp1:message/ns1:documentStatus/binaryDocumentAttachment">
          <xsl:for-each select="/imp1:message/ns1:documentStatus/binaryDocumentAttachment">
            <binaryDocumentAttachment>
              <xsl:if test="@name">
                <xsl:attribute name="name">
                  <xsl:value-of select="@name"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="contentType">
                <xsl:value-of select="@contentType"/>
              </xsl:attribute>
              <xsl:if test="@documentNumber">
                <xsl:attribute name="documentNumber">
                  <xsl:value-of select="@documentNumber"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:if test="@documentTypeCode">
                <xsl:attribute name="documentTypeCode">
                  <xsl:value-of select="@documentTypeCode"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="."/>
            </binaryDocumentAttachment>
          </xsl:for-each>
        </xsl:if>
        <xsl:for-each select="/imp1:message/ns1:documentStatus/documentLocation">
          <documentLocation>
            <locationURL>
              <xsl:value-of select="locationURL"/>
            </locationURL>
            <xsl:if test="description">
              <description>
                <xsl:value-of select="description"/>
              </description>
            </xsl:if>
          </documentLocation>
        </xsl:for-each>
        <originalDocumentReference>
          <originalSender>
            <xsl:for-each select="/imp1:message/ns1:documentStatus/originalDocumentReference/originalSender/id">
              <id>
                <xsl:attribute name="entityIdTypeCoded">
                  <xsl:value-of select="@entityIdTypeCoded"/>
                </xsl:attribute>
                <xsl:value-of select="."/>
              </id>
            </xsl:for-each>
            <xsl:if test="/imp1:message/ns1:documentStatus/originalDocumentReference/originalSender/name">
              <name>
                <xsl:value-of select="/imp1:message/ns1:documentStatus/originalDocumentReference/originalSender/name"/>
              </name>
            </xsl:if>
          </originalSender>
          <originalReceiver>
            <xsl:for-each select="/imp1:message/ns1:documentStatus/originalDocumentReference/originalReceiver/id">
              <id>
                <xsl:attribute name="entityIdTypeCoded">
                  <xsl:value-of select="@entityIdTypeCoded"/>
                </xsl:attribute>
                <xsl:value-of select="."/>
              </id>
            </xsl:for-each>
            <xsl:if test="/imp1:message/ns1:documentStatus/originalDocumentReference/originalReceiver/name">
              <name>
                <xsl:value-of select="/imp1:message/ns1:documentStatus/originalDocumentReference/originalReceiver/name"/>
              </name>
            </xsl:if>
          </originalReceiver>
          <originalDocument>
            <xsl:attribute name="type">
              <xsl:value-of select="/imp1:message/ns1:documentStatus/originalDocumentReference/originalDocument/@type"/>
            </xsl:attribute>
            <xsl:if test="/imp1:message/ns1:documentStatus/originalDocumentReference/originalDocument/@referencedDocumentDate">
              <xsl:attribute name="referencedDocumentDate">
                <xsl:value-of select="/imp1:message/ns1:documentStatus/originalDocumentReference/originalDocument/@referencedDocumentDate"/>
              </xsl:attribute>
            </xsl:if>
            <xsl:if test="/imp1:message/ns1:documentStatus/originalDocumentReference/originalDocument/@referencedDocumentId">
              <xsl:attribute name="referencedDocumentId">
                <xsl:value-of select="/imp1:message/ns1:documentStatus/originalDocumentReference/originalDocument/@referencedDocumentId"/>
              </xsl:attribute>
            </xsl:if>
            <xsl:if test="/imp1:message/ns1:documentStatus/originalDocumentReference/originalDocument/@lineId">
              <xsl:attribute name="lineId">
                <xsl:value-of select="/imp1:message/ns1:documentStatus/originalDocumentReference/originalDocument/@lineId"/>
              </xsl:attribute>
            </xsl:if>
            <xsl:value-of select="/imp1:message/ns1:documentStatus/originalDocumentReference/originalDocument"/>
          </originalDocument>
          <xsl:if test="/imp1:message/ns1:documentStatus/originalDocumentReference/originalMessageId">
            <originalMessageId>
              <xsl:value-of select="/imp1:message/ns1:documentStatus/originalDocumentReference/originalMessageId"/>
            </originalMessageId>
          </xsl:if>
        </originalDocumentReference>
        <statusInformation>
          <status>
            <xsl:value-of select="/imp1:message/ns1:documentStatus/statusInformation/status"/>
          </status>
          <xsl:for-each select="/imp1:message/ns1:documentStatus/statusInformation/documentError">
            <documentError>
              <code>
                <xsl:value-of select="code"/>
              </code>
              <xsl:if test="note">
                <note>
                  <xsl:value-of select="note"/>
                </note>
              </xsl:if>
            </documentError>
          </xsl:for-each>
        </statusInformation>
        <?oracle-xsl-mapper-position imp1:genericDocument?>
      </ns1:documentStatus>
    </imp1:message>
  </xsl:template>
</xsl:stylesheet>
